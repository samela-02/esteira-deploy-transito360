@Library('transito360-library') _

pipeline {
    agent any

    parameters {
        string(name: 'CIDADE', defaultValue: 'lem', description: 'Cidade de destino.')
        string(name: 'VERSAO', defaultValue: 'develop', description: 'Branch ou tag.')
    }

    stages {
        stage('Checkout Monorepo') {
            steps {
                cleanWs()
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: params.VERSAO]],
                    userRemoteConfigs: [[
                        url: 'https://github.com/tivic-pdi/transito360.git',
                        credentialsId: 'github-token'
                    ]]
                ])
            }
        }
        stage('Deploy do Serviço de Back-end') {
            steps {
                script {
                    def envCredentialId = "transito360-backend-env-${params.CIDADE}"
                    
                    // Carrega a credencial do .env da cidade específica
                    withCredentials([file(credentialsId: envCredentialId, variable: 'ENV_FILE')]) {
                        // Lê as propriedades do arquivo .env
                        def envProps = readProperties file: ENV_FILE

                        // Monta o mapa de configuração completo
                        def config = [
                            cidade: params.CIDADE,
                            servico: 'backend',
                            sshCredentialId: 'ssh-cred-id', 
                            envCredentialId: envCredentialId,
                            remoteHost: envProps.REMOTE_HOST // Adiciona o host lido do arquivo
                        ]

                        // Entra no diretório do serviço antes de chamar o deploy
                        dir('spring') {
                            deployTools.deployService(config)
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
